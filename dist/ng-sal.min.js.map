{"version":3,"sources":["main.js","authenticated-application.directive.js","constant.config.js","login-panel.directive.js","login.controller.js","login.service.js","permission.service.js","user-panel.directive.js","user.controller.js"],"names":["angular","module","authenticatedApplication","loginService","$document","$location","permissionService","restrict","link","scope","elem","attrs","isAuthenticated","getCurrentUser","username","authenticate","data","setUserDetails","removeClass","$on","hasPermission","resource","directive","$inject","constant","applicationName","applicationHomePath","applicationApiVersion","name","loginPanel","ngsalConfig","template","apiVersion","loginController","$scope","authService","$sanitize","sanitizeCredentials","password","btoa","unescape","encodeURIComponent","ignoreAuthModule","limpaForm","authenticationError","submit","login","activateLogin","logout","controller","$resource","$rootScope","service","method","isArray","headers","Content-Type","logoutApi","url","user","goToPerfil","params","codigo","currentUser","obj","permissions","userDetails","loginConfirmed","loginCancelled","success","$broadcast","factory","secureResource","userPanel","userController","$state","changePerfil","perfil","go","homePath"],"mappings":"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","file":"ng-sal.min.js","sourcesContent":["(function () {\n  'use strict';\n\n  angular.module('ng-sal', ['http-auth-interceptor', 'ui.router']);\n\n})();\n","(function () {\n  'use strict';\n\n  angular.module('ng-sal').directive('authenticatedApplication', authenticatedApplication);\n\n  authenticatedApplication.$inject = ['loginService', '$document', '$location', 'permissionService'];\n\n  function authenticatedApplication (loginService, $document, $location, permissionService) {\n      return {\n          restrict: 'A',\n          link: function (scope, elem, attrs) {\n\n              scope.isAuthenticated = false;\n\n              if (loginService.getCurrentUser() === null || loginService.getCurrentUser().username === null || loginService.getCurrentUser().username === '') {\n                  loginService.authenticate({}, function (data) {\n                      scope.isAuthenticated = true;\n                      loginService.setUserDetails(data);\n                  }, function (data) {\n                      scope.isAuthenticated = false;\n                  });\n              }\n              elem.removeClass('waiting-for-angular');\n\n              scope.$on('event:auth-loginRequired', function () {\n                  scope.isAuthenticated = false;\n              });\n              scope.$on('event:auth-loginConfirmed', function () {\n                  scope.isAuthenticated = true;\n              });\n              scope.$on('event:userLogout', function () {\n                  scope.isAuthenticated = false;\n              });\n              scope.hasPermission = function(resource){\n                  return permissionService.hasPermission(resource);\n              };\n          }\n      };\n  }\n\n})();\n","(function () {\n  'use strict';\n\n  angular.module('ng-sal').constant('ngsalConfig', {\n      applicationName: 'ngsalConfig.applicationName',\n      applicationHomePath : 'ngsalConfig.homePath',\n      applicationApiVersion: 'ngsalConfig.apiVersion'\n  }).constant('secureResource', {\n      name: function (name){\n          return 'ROLE_' + name;\n      }\n  });\n})();\n","(function () {\n  'use strict';\n\n  angular.module('ng-sal').directive('loginPanel', loginPanel);\n\n  loginPanel.$inject = ['ngsalConfig'];\n\n  function loginPanel (ngsalConfig) {\n      return {\n          restrict: 'A',\n          template: '<div block-ui block-ui-pattern=\"/.*\\/api\\/' + ngsalConfig.apiVersion + '\\/authentication/\"><div class=\"content-field-total\" ng-controller=\"loginController\" ng-hide=\"isAuthenticated\"><div class=\"content-field\"><h3>Área Restrita</h3><div class=\"alarm alarm-alizarin\">Usuário ou senha inválido!</div><div id=\"login-box\"><form name=\"loginForm\" autocomplete=\"off\"><div class=\"content-login\" show-errors><label>Login</label><input auto-focus type=\"text\" name=\"username\" ng-model=\"username\"/><div class=\"alarm alarm-alizarin\" ng-show=\"loginForm.username.$error.required\">Obrigatório</div></div><div class=\"content-pass\" show-errors><label\">Senha</label><input type=\"password\" name=\"password\" ng-model=\"password\" /><div class=\"alarm alarm-alizarin\" ng-show=\"loginForm.password.$error.required\">Obrigatório</div></div><div class=\"content-buttons\"><button class=\"bt bt-lime\" type=\"submit\" ng-click=\"submit()\" ><i class=\"mdi mdi-check\"></i>Autenticar</button><div class=\"alarm alarnm-alizarin\" ng-show=\"authenticationError\">Usuário ou senha inválida!</div></div></form></div></div></div>'\n      }\n  }\n\n})();\n","(function () {\n  'use strict';\n\n  angular.module('ng-sal').controller('loginController', loginController);\n\n  loginController.$inject = ['$scope', 'loginService', 'authService', '$document', '$sanitize'];\n\n  function loginController ($scope, loginService, authService, $document, $sanitize) {\n\n      $scope.authenticationError = false;\n\n      function sanitizeCredentials() {\n          return {\n              username: $sanitize($scope.username),\n              password: btoa(unescape(encodeURIComponent($scope.password))),\n              ignoreAuthModule: 'ignoreAuthModule'\n          };\n      }\n\n      $scope.submit = function () {\n\n          $scope.authenticationError = false;\n\n          loginService.login(sanitizeCredentials(),\n              function (data) {\n                  loginService.activateLogin(data);\n                  limpaForm();\n              }, function (data) {\n                  loginService.logout(data);\n                  limpaForm();\n                  $scope.authenticationError = true;\n              });\n      };\n\n      function limpaForm() {\n          $scope.username = null;\n          $scope.password = null;\n\n      }\n\n  }\n\n})();\n","(function () {\n  'use strict';\n\n  angular.module('ng-sal').factory('loginService', loginService);\n\n  loginService.$inject = ['$resource', 'authService', '$rootScope', 'ngsalConfig'];\n\n  function loginService ($resource, authService, $rootScope, ngsalConfig) {\n      var service = $resource('/' + ngsalConfig.applicationName + '/api/' + ngsalConfig.apiVersion + '/authentication', {\n          'username': '@username',\n          'password': '@password'\n      }, {\n          'login': {\n              method: 'POST',\n              isArray: false,\n              headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n              ignoreAuthModule: 'ignoreAuthModule'\n          },\n          'logoutApi': {\n              method: 'GET',\n              url: '/' + ngsalConfig.applicationName + '/api/' + ngsalConfig.apiVersion + '/logout',\n              isArray: true,\n              ignoreAuthModule: 'ignoreAuthModule'\n          },\n          'authenticate': {\n              method: 'GET',\n              url: '/' + ngsalConfig.applicationName + '/api/' + ngsalConfig.apiVersion + '/authenticate',\n              isArray: false,\n              ignoreAuthModule: 'ignoreAuthModule'\n          },\n          'user': {\n              method: 'GET',\n              url: '/' + ngsalConfig.applicationName + '/api/' + ngsalConfig.apiVersion + '/user',\n              isArray: false\n          },\n          'goToPerfil': {\n              method: 'GET',\n              url: '/' + ngsalConfig.applicationName + '/api/' + ngsalConfig.apiVersion + '/goToPerfil/:codigo',\n              params: {codigo: '@codigo'},\n              isArray: false\n          }\n      });\n\n      var currentUser = null;\n\n      service.getCurrentUser = function () {\n          return currentUser;\n      };\n\n      service.activateLogin = function (obj) {\n          currentUser = {username: obj.username, permissions: {}, userDetails: {}};\n          service.authenticate({}, function (userDetails) {\n              service.setUserDetails(userDetails);\n              authService.loginConfirmed(obj);\n          });\n\n      };\n\n      service.logout = function (data) {\n          authService.loginCancelled(data);\n          currentUser = null;\n          service.logoutApi(function (success) {\n              $rootScope.$broadcast('event:userLogout');\n          });\n\n      };\n\n      service.setUserDetails = function (data) {\n          if (!currentUser) currentUser = {username: data.username, permissions: {}, userDetails: {}};\n          currentUser.userDetails = data.userDetails;\n          currentUser.permissions = data.permissions;\n          $rootScope.currentUser = currentUser;\n          $rootScope.$broadcast('event:userDetailsPrepared');\n      };\n\n      return service;\n  }\n\n})();\n","(function () {\n  'use strict';\n\n  angular.module('ng-sal').factory('permissionService', permissionService);\n\n  permissionService.$inject = ['loginService','secureResource'];\n\n  function permissionService (loginService,secureResource) {\n\n    var service = {\n        hasPermission : hasPermission\n    };\n\n    return service;\n\n    function hasPermission(name){\n         if(loginService.getCurrentUser()){\n            return loginService.getCurrentUser().permissions[secureResource.name(name)];\n         }\n         return false;\n    }\n\n  }\n\n})();\n","(function () {\n  'use strict';\n\n  angular.module('ng-sal').directive('userPanel', userPanel);\n\n  function userPanel () {\n      return {\n          restrict: 'A',\n          template:\n          '<div class=\"navbar-right\" ng-controller=\"userController\" ng-show=\"isAuthenticated\">' +\n              '<ul class=\"nav navbar-nav\">' +\n                  '<li class=\"dropdown user user-menu\">' +\n                      '<a href=\"\" class=\"dropdown-toggle\" data-toggle=\"dropdown\"> <i class=\"glyphicon glyphicon-user\"></i></a>' +\n                      '<ul class=\"dropdown-menu\">' +\n                          '<li class=\"user-header bg-light-blue\"  style=\"height: auto;\"><p><small>{{user.login}}</small></p><p>{{user.nome}}<small>Perfil: {{user.perfil}}</small></p></li>' +\n                          '<li class=\"user-footer\"><div class=\"pull-right\"><a href=\"\" ng-click=\"logout()\" class=\"btn btn-danger\" style=\"color:white;\"> Sair</a></div></li>' +\n                      '</ul>' +\n                  '</li>' +\n              '</ul>' +\n          '</div>'\n      }\n  }\n\n})();\n","(function () {\n  'use strict';\n\n  angular.module('ng-sal').controller('userController', userController);\n\n  userController.$inject = ['$scope', 'loginService', 'ngsalConfig', '$state'];\n\n  function userController ($scope, loginService,ngsalConfig, $state) {\n\n      $scope.logout = function () {\n          loginService.logout();\n      };\n\n      $scope.changePerfil = function (perfil) {\n          //TODO: depende de alteração do sca\n      };\n\n      $scope.$on('event:userDetailsPrepared', function () {\n          $scope.user = loginService.getCurrentUser().userDetails;\n          $state.go(ngsalConfig.homePath);\n      });\n\n      $scope.$on('event:userLogout', function () {\n          $scope.user = {};\n      });\n\n  }\n\n})();\n"]}